<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN">

-<mapper namespace="com.side_on.dao.RecruitDao">


-<resultMap id="recruitList" type="com.side_on.dto.RecruitBoard">

<result column="Recruit_num" property="recruit_num"/>

<result column="memberId" property="memberId"/>

<result column="hit" property="hit"/>

<result column="start_date" property="start_date"/>

<result column="end_date" property="end_date"/>

<result column="title" property="title"/>

<result column="content" property="content"/>

<result column="save_date" property="save_date"/>

<result column="pay_check" property="pay_check"/>

<result column="pay_amount" property="pay_amount"/>

<result column="visible_check" property="visible_check"/>

<result column="simple_info" property="simple_info"/>

<result column="pj_content" property="pj_content"/>

<result column="project_name" property="project_name"/>

<result column="front" property="Front"/>

<result column="back" property="Back"/>

<result column="aos" property="aos"/>

<result column="ios" property="ios"/>

<result column="uxui" property="uxui"/>

<result column="plan" property="plan"/>

<result column="pm" property="pm"/>

<result column="server" property="server"/>

</resultMap>


-<resultMap id="applyList" type="com.side_on.dto.Apply">

<result column="apply_num" property="apply_num"/>

<result column="title" property="titie"/>

<result column="Recruit_num" property="recruit_num"/>

<result column="memberId" property="member_id"/>

<result column="part" property="part"/>

<result column="message" property="message"/>

<result column="join_yn" property="join_yn"/>

<result column="pay_check" property="pay_check"/>

<result column="payment_date" property="payment_date"/>

</resultMap>


-<resultMap id="reward" type="com.side_on.dto.Reward">

<result column="payment_id" property="payment_id"/>

<result column="Recruit_num" property="recruit_num"/>

<result column="apply_num" property="apply_num"/>

<result column="writer_memberId" property="writer_memberId"/>

<result column="apply_memberId" property="apply_memberId"/>

<result column="pay_amount" property="pay_amount"/>

<result column="payment_date" property="payment_date"/>

<result column="reward_yn" property="reward_yn"/>

</resultMap>

<!--1. 모집 게시글 등록하기-->


<insert id="insertRecruitBoard" parameterType="com.side_on.dto.RecruitBoard">insert into Recruitvalues(Recruit_SEQ.nextval, #{memberId}, #{hit}, #{start_date}, #{end_date}, #{title}, #{content},#{save_date}, #{pay_check}, #{pay_amount}, #{visible_check}, #{simple_info}, #{pj_content},#{project_name}, #{Front}, #{Back}, #{aos}, #{ios}, #{uxui}, #{plan}, #{pm}, #{server}, #{status} ) </insert>

<!-- 게시판 목록(페이징 적용) public List<QnABoard> getListPaging(Criteria cri) -->



-<select id="getListPaging" resultType="com.side_on.dto.RecruitBoard">

-<![CDATA[
		select rn,recruit_num, memberId, hit, start_date, end_date, title, Content, save_date, pay_check, pay_amount, visible_check, simple_info, project_name, Front, Back, aos, ios, uxui, plan, pm
     	from (
				select 
				rownum as rn,Recruit_num, memberId, hit, start_date, end_date, title, Content, save_date, pay_check, pay_amount, visible_check, 
				simple_info, project_name, Front, Back, aos, ios, uxui, plan, pm 
				from Recruit 
				where rownum <= #{pageNum}  * #{amount})  order by rn desc
    ]]>
</select>

<!-- 게시물 총 갯수 public int getTotal(Criteria cri) -->


<select id="allCount" resultType="int">select count(*) from recruit </select>

<!--2. 게시글 총 갯수 -->


<select id="memberAll" resultMap="recruitList">select recruit_num, memberId, title from recruit where visible_check = 'y' order by rownum desc </select>

<!-- 3. 상세 게시글 조회 -->


<select id="memberDetail" resultMap="recruitList">select * from recruit where recruit_num = #{recruit_num} </select>

<!-- 4. 지원 접수 : recruitApply-->


<insert id="recruitApply" parameterType="com.side_on.dto.Apply">INSERT INTO Apply VALUES(Apply_SEQ.nextval,#{member_id},#{part},#{message},#{recruit_num},#{join_yn},#{payment_date},#{pay_check}) </insert>

<select id="getApply_Num" resultType="int">select apply_num from apply where memberId=#{memberId} and recruit_num = #{recruit_num} </select>

<select id="selectFront" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='front' </select>

<select id="selectBack" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='back' </select>

<select id="selectAos" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='aos' </select>

<select id="selectIos" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='ios' </select>

<select id="selectServer" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='server' </select>

<select id="selectUxui" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='uxui' </select>

<select id="selectPlan" resultType="int">select COUNT(*) from apply where recruit_num = #{recruit_num} and part='plan' </select>

<select id="selectPm" resultType="int">select COUNT(*)from apply where recruit_num = #{recruit_num} and part='pm' </select>

<!-- 검색 -->


<select id="searchList" parameterType="String" resultMap="recruitList">select recruit_num, memberId, title from recruit order by rownum desc </select>

<select id="mypageApply" parameterType="String" resultType="map">select r.recruit_num, a.apply_num, r.title, r.memberId, a.join_ynfrom apply a, recruit rwhere a.recruit_num = r.recruit_num and a.memberId=#{memberId} </select>

<select id="myApplyAll" parameterType="String" resultType="com.side_on.dto.RecruitMyPage">select r.recruit_num, a.apply_num, r.title, r.memberId, a.join_ynfrom apply a, recruit rwhere a.recruit_num = r.recruit_num and a.memberId=#{memberId} </select>

<select id="myRecruit" parameterType="String" resultMap="recruitList">select recruit_num, title,memberId from recruit </select>

<select id="myApply" parameterType="String" resultMap="applyList">select apply_num,join_yn from apply where memberId= #{memberId} </select>

<insert id="recruitCancel">update apply set join_yn = #{join_yn} where Recruit_num = #{recruit_num} and memberId = #{memberId} </insert>

<select id="recruitMyRecruit" parameterType="String" resultMap="recruitList">select recruit_num, title, status, visible_check from recruit where memberId = #{memberId} and visible_check = 'y' </select>

<select id="getApplyList" resultMap="applyList"> select * from apply where recruit_num = #{recruit_num} </select>

<select id="getMemberInfo" parameterType="String" resultType="String"> select email from member where member_Id= #{memberId} </select>

<insert id="recruitDelete"> update recruit set visible_check = #{n} where Recruit_num = #{recruit_num} </insert>

<insert id="updateRecruitBoard" parameterType="com.side_on.dto.RecruitBoard">update recruit set start_date=#{start_date}, end_date=#{end_date}, title=#{title}, content=#{content},pay_check=#{pay_check}, pay_amount=#{pay_amount}, simple_info=#{simple_info}, pj_content=#{pj_content},project_name=#{project_name}, front=#{Front}, back=#{Back}, aos=#{aos}, ios=#{ios}, uxui=#{uxui}, plan=#{plan}, pm=#{pm}, server=#{server}where recruit_num = #{recruit_num} </insert>

<select id="getWriterMemberId" parameterType="int" resultType="String">select memberId from recruit where recruit_num = #{recruit_num} </select>

<insert id="setReward" parameterType="com.side_on.dto.Reward">INSERT INTO reward VALUES(reward_SEQ.nextval,#{recruit_num},#{apply_num},#{writer_memberId},#{apply_memberId},#{pay_amount},#{payment_date},#{reward_yn}) </insert>

<select id="getPayAmount" resultType="String">select pay_amount from recruit where memberId = #{writer_memberId} and Recruit_num = #{recruit_num} </select>

<select id="getRewardList" resultMap="reward">select * from reward </select>

<insert id="getReward"> update reward set reward_yn='y'where recruit_num = #{recruit_num} and payment_id = #{payment_id} </insert>

<select id="getMemberId" resultType="String">select member_Id from member where name=#{name} and mobile=#{mobile} </select>

<select id="getPwMemberId" resultType="String">select member_Id from member where member_Id=#{memberId} and mobile=#{mobile} </select>

<insert id="resetPw">update member set member_pw=#{resetPw} where member_Id= #{memberId} </insert>

</mapper>